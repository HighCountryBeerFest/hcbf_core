<?php
/**
 * @file
 * Code for the HCBF Breweries feature.
 */

include_once 'hcbf_breweries.features.inc';

/**
 * Implements hook_permission()
 */
function hcbf_breweries_permission() {
  $permissions = array();

  $permissions['manage breweries'] = array(
    'title' => t('Manage breweries')
  );

  $permissions['access breweries'] = array(
    'title' => t('Access breweries')
  );

  $permissions['access breweries registration'] = array(
    'title' => t('Access breweries registration')
  );

  return $permissions;
}

/**
 * Implements hook_menu()
 */
function hcbf_breweries_menu() {
  $items = array();

  $items['admin/config/hcbf/breweries'] = array(
    'title' => 'Breweries',
    'description' => 'Configuration for the High Country Beer Fest breweries functionality.',
    'page callback' => 'hcbf_breweries_manage',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'hcbf_breweries.admin.inc',
  );

  $items['breweries'] = array(
    'title' => 'Participating Breweries',
    'page callback' => 'hcbf_breweries',
    'access arguments' => array('access breweries'),
    'file' => 'hcbf_breweries.pages.inc'
  );

  $items['breweries/register'] = array(
    'title' => 'Register as a brewery',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcbf_brewery_registration_form'),
    'access arguments' => array('access breweries registration'),
    'file' => 'hcbf_breweries.forms.inc'
  );

  $items['breweries/export/hcbf_breweries.csv'] = array(
    'title' => 'Export breweries',
    'page callback' => 'hcbf_breweries_export',
    'access arguments' => array('manage breweries'),
    'file' => 'hcbf_breweries.pages.inc'
  );

  $items['breweries/settings'] = array(
    'title' => 'Breweries settings',
    'descrption' => t('Settings for the breweries section of the site.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('hcbf_breweries_settings_form'),
    'access arguments' => array('manage breweries'),
    'file' => 'hcbf_breweries.forms.inc'
  );

  return $items;
}

/**
 * Implements hook_theme()
 */
function hcbf_breweries_theme() {
  $themes = array();

  $themes['hcbf_breweries'] = array(
    'variables' => array('breweries' => NULL),
    'template' => 'templates/hcbf_breweries',
  );

  $themes['hcbf_breweries_registration'] = array(
    'variables' => array(),
    'template' => 'templates/hcbf_breweries_registration',
  );

  $themes['hcbf_breweries_on_sale'] = array(
    'variables' => array(
      'wrapper_classes' => NULL,
    ),
    'template' => 'templates/hcbf_breweries_on_sale',
  );

  $themes['hcbf_breweries_manage'] = array(
    'variables' => array(
      'breweries' => NULL,
    ),
    'template' => 'templates/hcbf_breweries_manage',
  );

  return $themes;
}

/**
 * Implements hook_mail()
 */
function hcbf_breweries_mail($key, &$message, $params) {
  global $user;

  $options = array(
    'langcode' => $message['language']->language,
  );

  switch ($key) {
    case 'breweries_message':
      $message['subject'] = t('[@site-name breweries Form]', array('@site-name' => variable_get('site_name', 'Drupal')), $options);
      $message['body'][] = t('@name has signed up for the festival!',
        array(
          '@name' => check_plain($params['brewery_name']),
        ),
      $options);
      break;
  }
}

/**
 * Implements a function that sends the mail
 */
function hcbf_breweries_send_mail($form_values) {
  $module = 'hcbf_breweries';
  $key = 'breweries_message';
  $to = 'breweries@hcbeerfest.com';
  $from = 'noreply@hcbeerfest.com';
  $params = $form_values;
  $language = language_default();
  $send = TRUE;
  $result = drupal_mail($module, $key, $to, $language, $params, $from, $send);
  if ($result['result'] != TRUE) {
    drupal_set_message(t('There was a problem sending your message and it was not sent, but you are in the system. If we do not contact you, use the contact form on this site to contact us.'), 'error');
  }
}

/**
 * Gets the current festival breweries.
 */
function hcbf_breweries_current() {
  $key = __FUNCTION__;
  $brewery_data = &drupal_static($key);

  $breweries = array();
  if (!isset($brewery_data)) {
    if ($cache = cache_get($key)) {
      $breweries = $cache->data;
    }
    else {
      $current_festival = variable_get('hcbf_current_festival', 0);
      if ($current_festival != 0) {
        $brewery_query = new EntityFieldQuery();
        $brewery_query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'hcbf_brewery')
          ->propertyCondition('status', 1)
          ->fieldCondition('field_hcbf_brewery_festival', 'target_id', $current_festival, '=')
          ->propertyOrderBy('title', 'ASC');

        $brewery_result = $brewery_query->execute();
        $brewery_nids = array_keys($brewery_result['node']);

        foreach ($brewery_nids as $brewery_nid) {
          $brewery_entity = entity_metadata_wrapper('node', $brewery_nid);
          $breweries[] = array(
            'name' => $brewery_entity->label(),
            'location' => $brewery_entity->field_hcbf_brewery_brewery_city->value() . ', ' . $brewery_entity->field_hcbf_brewery_brewery_state->value(),
            'accepted' => $brewery_entity->field_hcbf_brewery_accepted->value(),
            'view' => l(t('View'), 'node/' . $brewery_entity->nid->value()),
            'edit' => l(t('Edit'), 'node/' . $brewery_entity->nid->value() . '/edit', array('query' => array('destination' => 'admin/config/hcbf/breweries'))),
            'delete' => l(t('Delete'), 'node/' . $brewery_entity->nid->value() . '/delete', array('query' => array('destination' => 'admin/config/hcbf/breweries'))),
          );
        }
      }
      cache_set($key, $breweries);
    }
  }
  return $breweries;
}
