<?php
/**
 * @file
 * Code for the HCBF Sponsors feature.
 */

include_once 'hcbf_sponsors.features.inc';

/**
 * Implements hook_permission()
 */
function hcbf_sponsors_permission() {
  $permissions = array();

  $permissions['manage sponsors'] = array(
    'title' => t('Manage sponsors')
  );

  $permissions['access sponsors'] = array(
    'title' => t('Access sponsors')
  );

  $permissions['access sponsors registration'] = array(
    'title' => t('Access sponsors registration')
  );

  return $permissions;
}

/**
 * Implements hook_menu()
 */
function hcbf_sponsors_menu() {
  $items = array();

  $items['admin/config/hcbf/sponsors'] = array(
    'title' => 'Sponsors',
    'description' => 'Configuration for the High Country Beer Fest sponsor functionality.',
    'page callback' => 'hcbf_sponsors_manage',
    'access arguments' => array('manage sponsors'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'hcbf_sponsors.admin.inc',
  );

  $items['sponsors'] = array(
    'title' => t('Our sponsors'),
    'page callback' => 'hcbf_sponsors',
    'access arguments' => array('access sponsors'),
    'type' => MENU_CALLBACK,
    'file' => 'hcbf_sponsors.pages.inc'
  );

  return $items;
}

/**
 * Implements hook_theme()
 */
function hcbf_sponsors_theme() {
  $themes = array();

  $themes['hcbf_sponsors'] = array(
    'variables' => array(
      'sponsors' => NULL,
    ),
    'template' => 'templates/hcbf_sponsors',
  );

  $themes['hcbf_sponsor_registration'] = array(
    'variables' => array(
      'classes' => NULL,
    ),
    'template' => 'templates/hcbf_sponsor_registration',
  );

  $themes['hcbf_sponsors_manage'] = array(
    'variables' => array(
      'all_sponsors' => NULL,
      'sponsors' => NULL,
    ),
    'template' => 'templates/hcbf_sponsors_manage',
  );

  return $themes;
}

/**
 * Implements hook_entity_update()
 */
function hcbf_sponsors_entity_update($entity, $type) {
  if (isset($entity->type)) {
    if ($entity->type == 'hcbf_sponsor') {
      cache_clear_all('hcbf_sponsors_current', 'cache', TRUE);
      drupal_set_message(t('Cleared sponsor cache.'));
    }
  }
}

/**
 * Gets all of the sponsors.
 */
function hcbf_sponsors_all() {
  $key = __FUNCTION__;
  $sponsor_data = &drupal_static($key);

  $sponsors = array();
  if (!isset($sponsor_data)) {
    if ($cache = cache_get($key)) {
      $sponsors = $cache->data;
    }
    else {
      $sponsor_query = new EntityFieldQuery();
      $sponsor_query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'hcbf_sponsor')
        ->propertyCondition('status', 1)
        ->fieldOrderBy('field_hcbf_sponsor_sponsor_level', 'value', 'DESC');

      $sponsor_result = $sponsor_query->execute();
      $sponsor_nids = array_keys($sponsor_result['node']);

      foreach ($sponsor_nids as $sponsor_nid) {
        $sponsor_entity = entity_metadata_wrapper('node', $sponsor_nid);
        $sponsors[$sponsor_entity->field_hcbf_sponsor_sponsor_level->label()][] = array(
          'nid' => $sponsor_entity->nid->value(),
          'name' => $sponsor_entity->label(),
        );
      }
      cache_set($key, $sponsors);
    }
  }
  return $sponsors;
}

/**
 * Gets the current festival sponsors.
 */
function hcbf_sponsors_current() {
  $key = __FUNCTION__;
  $sponsor_data = &drupal_static($key);

  $sponsors = array();
  if (!isset($sponsor_data)) {
    if ($cache = cache_get($key)) {
      $sponsors = $cache->data;
    }
    else {
      $current_festival = variable_get('hcbf_current_festival', 0);
      if ($current_festival != 0) {
        $sponsor_query = new EntityFieldQuery();
        $sponsor_query->entityCondition('entity_type', 'node')
          ->entityCondition('bundle', 'hcbf_sponsor')
          ->propertyCondition('status', 1)
          ->fieldCondition('field_hcbf_sponsor_festival', 'target_id', $current_festival, '=')
          ->fieldOrderBy('field_hcbf_sponsor_sponsor_level', 'value', 'DESC');

        $sponsor_result = $sponsor_query->execute();
        $sponsor_nids = array_keys($sponsor_result['node']);

        foreach ($sponsor_nids as $sponsor_nid) {
          $sponsor_entity = entity_metadata_wrapper('node', $sponsor_nid);

          $sponsors[$sponsor_entity->field_hcbf_sponsor_sponsor_level->label()][] = array(
            'nid' => $sponsor_entity->nid->value(),
            'name' => $sponsor_entity->label(),
            'logo' => '<img src=' . image_style_url('medium', $sponsor_entity->field_hcbf_sponsor_image->value()['uri']) . ' title="' . $sponsor_entity->label(). '" class="img-responsive center-block" />',
            'link' => $sponsor_entity->field_hcbf_sponsor_sponsor_url->url->value(),
          );
        }
      }
      cache_set($key, $sponsors);
    }
  }
  return $sponsors;
}
